{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\PortfolioReact\\\\Discover.ReactJS.Web\\\\first-discover\\\\src\\\\pages\\\\Pr\\xE9sentation.js\";\nimport React from \"react\";\nimport Logo from \"../components/Logo\";\n//Appel la Navigation pour faire fonctionner la navigation\nimport Navigation from \"../components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Presentationpage from \"../components/Presentationpage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Présentation = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Presentationpage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Présentation;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst phrases = [\"David LI\"];\nconst el = document.getElementById(\"typewriter\");\nlet sleepTime = 100;\nlet curPhraseIndex = 0;\nconst writeLoop = async () => {\n  while (true) {\n    let curWord = phrases[curPhraseIndex];\n    for (let i = 0; i < curWord.length; i++) {\n      el.innerText = curWord.substring(0, i + 1);\n      await sleep(sleepTime);\n    }\n    await sleep(sleepTime * 10);\n    for (let i = curWord.length; i > 0; i--) {\n      el.innerText = curWord.substring(0, i - 1);\n      await sleep(sleepTime);\n    }\n    await sleep(sleepTime * 5);\n    if (curPhraseIndex === phrases.length - 1) {\n      curPhraseIndex = 0;\n    } else {\n      curPhraseIndex++;\n    }\n  }\n};\nwriteLoop();\nexport default Présentation;\nvar _c;\n$RefreshReg$(_c, \"Pr\\xE9sentation\");","map":{"version":3,"names":["React","Logo","Navigation","Presentationpage","Présentation","sleep","ms","Promise","resolve","setTimeout","phrases","el","document","getElementById","sleepTime","curPhraseIndex","writeLoop","curWord","i","length","innerText","substring"],"sources":["F:/React/PortfolioReact/Discover.ReactJS.Web/first-discover/src/pages/Présentation.js"],"sourcesContent":["import React from \"react\";\r\nimport Logo from \"../components/Logo\";\r\n//Appel la Navigation pour faire fonctionner la navigation\r\nimport Navigation from \"../components/Navigation\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Presentationpage from \"../components/Presentationpage\";\r\n\r\nconst Présentation = () => {\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <Navigation />\r\n      <Presentationpage />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nconst phrases = [\"David LI\"];\r\nconst el = document.getElementById(\"typewriter\");\r\n\r\nlet sleepTime = 100;\r\n\r\nlet curPhraseIndex = 0;\r\n\r\nconst writeLoop = async () => {\r\n  while (true) {\r\n    let curWord = phrases[curPhraseIndex];\r\n\r\n    for (let i = 0; i < curWord.length; i++) {\r\n      el.innerText = curWord.substring(0, i + 1);\r\n      await sleep(sleepTime);\r\n    }\r\n\r\n    await sleep(sleepTime * 10);\r\n\r\n    for (let i = curWord.length; i > 0; i--) {\r\n      el.innerText = curWord.substring(0, i - 1);\r\n      await sleep(sleepTime);\r\n    }\r\n\r\n    await sleep(sleepTime * 5);\r\n\r\n    if (curPhraseIndex === phrases.length - 1) {\r\n      curPhraseIndex = 0;\r\n    } else {\r\n      curPhraseIndex++;\r\n    }\r\n  }\r\n};\r\n\r\nwriteLoop();\r\n\r\nexport default Présentation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,kCAAkC;AACzC,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC;AAE9D,MAAMC,YAAY,GAAG,MAAM;EACzB,oBACE;IAAA,wBACE,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACR,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEV,CAAC;AAAC,KARIA,YAAY;AAUlB,SAASC,KAAK,CAACC,EAAE,EAAE;EACjB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAC1D;AAEA,MAAMI,OAAO,GAAG,CAAC,UAAU,CAAC;AAC5B,MAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;AAEhD,IAAIC,SAAS,GAAG,GAAG;AAEnB,IAAIC,cAAc,GAAG,CAAC;AAEtB,MAAMC,SAAS,GAAG,YAAY;EAC5B,OAAO,IAAI,EAAE;IACX,IAAIC,OAAO,GAAGP,OAAO,CAACK,cAAc,CAAC;IAErC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACvCP,EAAE,CAACS,SAAS,GAAGH,OAAO,CAACI,SAAS,CAAC,CAAC,EAAEH,CAAC,GAAG,CAAC,CAAC;MAC1C,MAAMb,KAAK,CAACS,SAAS,CAAC;IACxB;IAEA,MAAMT,KAAK,CAACS,SAAS,GAAG,EAAE,CAAC;IAE3B,KAAK,IAAII,CAAC,GAAGD,OAAO,CAACE,MAAM,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvCP,EAAE,CAACS,SAAS,GAAGH,OAAO,CAACI,SAAS,CAAC,CAAC,EAAEH,CAAC,GAAG,CAAC,CAAC;MAC1C,MAAMb,KAAK,CAACS,SAAS,CAAC;IACxB;IAEA,MAAMT,KAAK,CAACS,SAAS,GAAG,CAAC,CAAC;IAE1B,IAAIC,cAAc,KAAKL,OAAO,CAACS,MAAM,GAAG,CAAC,EAAE;MACzCJ,cAAc,GAAG,CAAC;IACpB,CAAC,MAAM;MACLA,cAAc,EAAE;IAClB;EACF;AACF,CAAC;AAEDC,SAAS,EAAE;AAEX,eAAeZ,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}